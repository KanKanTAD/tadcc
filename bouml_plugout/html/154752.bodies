class UmlBaseExtraArtifactDefinition
!!!321280.cpp!!!	create(inout parent : UmlArtifact, inout s : str) : UmlExtraArtifactDefinition
  return (UmlExtraArtifactDefinition *) parent->create_(anExtraArtifactDefinition, s);
!!!321280.java!!!	create(inout parent : UmlArtifact, inout s : str) : UmlExtraArtifactDefinition
  return (UmlExtraArtifactDefinition) parent.create_(anItemKind.anExtraArtifactDefinition, s);
!!!321408.cpp!!!	kind() : anItemKind
  return anExtraArtifactDefinition;
!!!321408.java!!!	kind() : anItemKind
  return anItemKind.anExtraArtifactDefinition;
!!!321664.cpp!!!	cppDecl() : string
  read_if_needed_();
  return _cpp_decl;
!!!321664.java!!!	cppDecl() : string
  read_if_needed_();
  return _cpp_decl;
!!!321792.cpp!!!	set_CppDecl(in v : str) : bool
  return set_it_(_cpp_decl, v, setCppDeclCmd);
!!!321792.java!!!	set_CppDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setCppDeclCmd, v);
  UmlCom.check();

  _cpp_decl = v;
!!!321920.cpp!!!	cppDef() : string
  read_if_needed_();
  return _cpp_def;
!!!321920.java!!!	cppDef() : string
  read_if_needed_();
  return _cpp_def;
!!!322048.cpp!!!	set_CppDef(in v : str) : bool
  return set_it_(_cpp_def, v, setCppDefCmd);
!!!322048.java!!!	set_CppDef(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setCppDefCmd, v);
  UmlCom.check();

  _cpp_def = v;
!!!322176.cpp!!!	javaDecl() : string
  read_if_needed_();
  return _java_decl;
!!!322176.java!!!	javaDecl() : string
  read_if_needed_();
  return _java_decl;
!!!322304.cpp!!!	set_JavaDecl(in v : str) : bool
  return set_it_(_java_decl, v, setJavaDeclCmd);
!!!322304.java!!!	set_JavaDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setJavaDeclCmd, v);
  UmlCom.check();

  _java_decl = v;
!!!322432.cpp!!!	phpDecl() : string
  read_if_needed_();
  return _php_decl;
!!!322432.java!!!	phpDecl() : string
  read_if_needed_();
  return _php_decl;
!!!322560.cpp!!!	set_PhpDecl(in v : str) : bool
  return set_it_(_php_decl, v, setPhpDeclCmd);
!!!322560.java!!!	set_PhpDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpDeclCmd, v);
  UmlCom.check();

  _php_decl = v;
!!!322688.cpp!!!	pythonDecl() : string
  read_if_needed_();
  return _python_decl;
!!!322688.java!!!	pythonDecl() : string
  read_if_needed_();
  return _python_decl;
!!!322816.cpp!!!	set_PythonDecl(in v : str) : bool
  return set_it_(_python_decl, v, setPhpDeclCmd);
!!!322816.java!!!	set_PythonDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpDeclCmd, v);
  UmlCom.check();

  _python_decl = v;
!!!322944.cpp!!!	idlDecl() : string
  read_if_needed_();
  return _idl_decl;
!!!322944.java!!!	idlDecl() : string
  read_if_needed_();
  return _idl_decl;
!!!323072.cpp!!!	set_IdlDecl(in v : str) : bool
  return set_it_(_idl_decl, v, setPhpDeclCmd);
!!!323072.java!!!	set_IdlDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpDeclCmd, v);
  UmlCom.check();

  _idl_decl = v;
!!!323200.cpp!!!	mysqlDecl() : string
  read_if_needed_();
  return _mysql_decl;
!!!323200.java!!!	mysqlDecl() : string
  read_if_needed_();
  return _mysql_decl;
!!!323328.cpp!!!	set_MysqlDecl(in v : str) : bool
  return set_it_(_mysql_decl, v, setPhpDeclCmd);
!!!323328.java!!!	set_MysqlDecl(in v : str) : bool
  UmlCom.send_cmd(identifier_(), OnInstanceCmd.setPhpDeclCmd, v);
  UmlCom.check();

  _mysql_decl = v;
!!!323456.cpp!!!	unload(in rec : bool, in del : bool) : void
#ifdef WITHCPP
  _cpp_def = 0;
  _cpp_decl = 0;
#endif
#ifdef WITHJAVA
  _java_decl = 0;
#endif
#ifdef WITHPHP
  _php_decl = 0;
#endif
#ifdef WITHPYTHON
  _python_decl = 0;
#endif
#ifdef WITHIDL
  _idl_decl = 0;
#endif
#ifdef WITHMYSQL
  _mysql_decl = 0;
#endif
  UmlBaseItem::unload(rec, del);
!!!323456.java!!!	unload(in rec : bool, in del : bool) : void
  _cpp_def = null;
  _cpp_decl = null;
  _java_decl = null;
  _idl_decl = null;
  _php_decl = null;
  _python_decl = null;
  _mysql_decl = null;
  super.unload(rec, del);
!!!323584.cpp!!!	read_cpp_() : void
  _cpp_decl = UmlCom::read_string();
  _cpp_def = UmlCom::read_string();
!!!323584.java!!!	read_cpp_() : void
  _cpp_decl = UmlCom.read_string();
  _cpp_def = UmlCom.read_string();
!!!323712.cpp!!!	read_java_() : void
  _java_decl = UmlCom::read_string();
!!!323712.java!!!	read_java_() : void
  _java_decl = UmlCom.read_string();
!!!323840.cpp!!!	read_php_() : void
  _php_decl = UmlCom::read_string();
!!!323840.java!!!	read_php_() : void
  _php_decl = UmlCom.read_string();
!!!323968.cpp!!!	read_python_() : void
  _python_decl = UmlCom::read_string();
!!!323968.java!!!	read_python_() : void
  _python_decl = UmlCom.read_string();
!!!324096.cpp!!!	read_idl_() : void
  _idl_decl = UmlCom::read_string();
!!!324096.java!!!	read_idl_() : void
  _idl_decl = UmlCom.read_string();
!!!324224.cpp!!!	read_mysql_() : void
  _mysql_decl = UmlCom::read_string();
!!!324224.java!!!	read_mysql_() : void
  _mysql_decl = UmlCom.read_string();
