class MysqlSettings
!!!280192.cpp!!!	useDefaults() : bool
  UmlCom::send_cmd(mysqlSettingsCmd, getMysqlUseDefaultsCmd);
  return UmlCom::read_bool();
!!!280192.java!!!	useDefaults() : bool
  UmlCom.send_cmd(CmdFamily.mysqlSettingsCmd, MysqlSettingsCmd._getMysqlUseDefaultsCmd);
  return UmlCom.read_bool();
!!!280320.cpp!!!	set_UseDefaults(in y : bool) : bool
  UmlCom::send_cmd(mysqlSettingsCmd, setMysqlUseDefaultsCmd, (char) y);
  return UmlCom::read_bool();
!!!280320.java!!!	set_UseDefaults(in y : bool) : bool
  UmlCom.send_cmd(CmdFamily.mysqlSettingsCmd, MysqlSettingsCmd._setMysqlUseDefaultsCmd,
		  (y) ? (byte) 1 : (byte) 0);
  UmlCom.check();
!!!280448.cpp!!!	rootDir() : string
  read_if_needed_();

  return _root;
!!!280448.java!!!	rootDir() : string
  read_if_needed_();

  return _root;
!!!280576.cpp!!!	set_RootDir(in v : string) : bool
  UmlCom::send_cmd(mysqlSettingsCmd, setMysqlRootDirCmd, v);
  if (UmlCom::read_bool()) {
    _root = v;
    return TRUE;
  }
  else
    return FALSE;
!!!280576.java!!!	set_RootDir(in v : string) : bool
  UmlCom.send_cmd(CmdFamily.mysqlSettingsCmd, MysqlSettingsCmd._setMysqlRootDirCmd, v);
  UmlCom.check();

  _root = v;
!!!280704.cpp!!!	sourceContent() : string
  read_if_needed_();

  return _src_content;
!!!280704.java!!!	sourceContent() : string
  read_if_needed_();

  return _src_content;
!!!280832.cpp!!!	set_SourceContent(in v : string) : bool
  UmlCom::send_cmd(mysqlSettingsCmd, setMysqlSourceContentCmd, v);
  if (UmlCom::read_bool()) {
    _src_content = v;
    return TRUE;
  }
  else
    return FALSE;
!!!280832.java!!!	set_SourceContent(in v : string) : bool
  UmlCom.send_cmd(CmdFamily.mysqlSettingsCmd, MysqlSettingsCmd._setMysqlSourceContentCmd, v);
  UmlCom.check();

  _src_content = v;
!!!280960.cpp!!!	sourceExtension() : string
  read_if_needed_();

  return _ext;
!!!280960.java!!!	sourceExtension() : string
  read_if_needed_();

  return _ext;
!!!281088.cpp!!!	set_SourceExtension(in v : string) : bool
  UmlCom::send_cmd(mysqlSettingsCmd, setMysqlSourceExtensionCmd, v);
  if (UmlCom::read_bool()) {
    _ext = v;
    return TRUE;
  }
  else
    return FALSE;
!!!281088.java!!!	set_SourceExtension(in v : string) : bool
  UmlCom.send_cmd(CmdFamily.mysqlSettingsCmd, MysqlSettingsCmd._setMysqlSourceExtensionCmd, v);
  UmlCom.check();

  _ext = v;
!!!281216.cpp!!!	tableDecl() : string
  read_if_needed_();

  return _table_def;
!!!281216.java!!!	tableDecl() : string
  read_if_needed_();

  return _table_def;
!!!281344.cpp!!!	set_TableDecl(in v : string) : bool
  UmlCom::send_cmd(mysqlSettingsCmd, setMysqlTableDeclCmd, v);
  if (UmlCom::read_bool()) {
    _table_def = v;
    return TRUE;
  }
  else
    return FALSE;
!!!281344.java!!!	set_TableDecl(in v : string) : bool
  UmlCom.send_cmd(CmdFamily.mysqlSettingsCmd, MysqlSettingsCmd._setMysqlTableDeclCmd, v);
  UmlCom.check();

  _table_def = v;
!!!281472.cpp!!!	columnDecl() : string
  read_if_needed_();

  return _column_def;
!!!281472.java!!!	columnDecl() : string
  read_if_needed_();

  return _column_def;
!!!281600.cpp!!!	set_ColumnDecl(in v : string) : bool
  UmlCom::send_cmd(mysqlSettingsCmd, setMysqlColumnDeclCmd, v);
  if (UmlCom::read_bool()) {
    _column_def = v;
    return TRUE;
  }
  else
    return FALSE;
!!!281600.java!!!	set_ColumnDecl(in v : string) : bool
  UmlCom.send_cmd(CmdFamily.mysqlSettingsCmd, MysqlSettingsCmd._setMysqlColumnDeclCmd, v);
  UmlCom.check();

  _column_def = v;
!!!281728.cpp!!!	keyDecl() : string
  read_if_needed_();

  return _key_def;
!!!281728.java!!!	keyDecl() : string
  read_if_needed_();

  return _key_def;
!!!281856.cpp!!!	set_KeyDecl(in v : string) : bool
  UmlCom::send_cmd(mysqlSettingsCmd, setMysqlKeyDeclCmd, v);
  if (UmlCom::read_bool()) {
    _key_def = v;
    return TRUE;
  }
  else
    return FALSE;
!!!281856.java!!!	set_KeyDecl(in v : string) : bool
  UmlCom.send_cmd(CmdFamily.mysqlSettingsCmd, MysqlSettingsCmd._setMysqlKeyDeclCmd, v);
  UmlCom.check();

  _key_def = v;
!!!282112.cpp!!!	read_() : void
  _root = UmlCom::read_string();
  
  _src_content = UmlCom::read_string();
  _ext = UmlCom::read_string();

  _table_def = UmlCom::read_string();
  _column_def = UmlCom::read_string();
  _key_def = UmlCom::read_string();
!!!282112.java!!!	read_() : void
  _root = UmlCom.read_string();
  
  _src_content = UmlCom.read_string();
  _ext = UmlCom.read_string();

  _table_def = UmlCom.read_string();
  _column_def = UmlCom.read_string();
  _key_def = UmlCom.read_string();
!!!282240.cpp!!!	read_if_needed_() : void
  UmlSettings::read_if_needed_();
  if (!_defined) {
    UmlCom::send_cmd(mysqlSettingsCmd, getMysqlSettingsCmd);
    read_();
    _defined = TRUE;
  }
!!!282240.java!!!	read_if_needed_() : void
  UmlSettings.read_if_needed_();
  if (!_defined) {
    UmlCom.send_cmd(CmdFamily.mysqlSettingsCmd, MysqlSettingsCmd._getMysqlSettingsCmd);
    read_();
    _defined = true;
  }
